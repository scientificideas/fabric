# Copyright the Hyperledger Fabric contributors. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0

name: Verify Build
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

env:
  GOPATH: /opt/go
  PATH: /opt/go/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin
  GO_VER: 1.21.3

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  dump_contexts_to_log:
    runs-on: ubuntu-20.04
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Dump inputs context
        env:
          INPUTS_CONTEXT: ${{ toJson(inputs) }}
        run: echo "INPUTS_CONTEXT"
      - name: Dump needs context
        env:
          NEEDS_CONTEXT: ${{ toJson(needs) }}
        run: echo "NEEDS_CONTEXT"
      - name: Dump secrets context
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: echo "SECRETS_CONTEXT"
      - name: Dump jobs context
        env:
          JOBS_CONTEXT: ${{ toJson(jobs) }}
        run: echo "JOBS_CONTEXT"
      - name: Dump vars context # jobs secrets needs inputs
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: echo "VARS_CONTEXT"
      - name: Dump env context
        env:
          ENV_CONTEXT: ${{ toJson(env) }}
        run: echo "ENV_CONTEXT"
  basic-checks:
    name: Basic Checks
    runs-on: ${{ vars.RUNNER || 'ubuntu-20.04' }}
    steps:
      - uses: actions/setup-go@v3
        name: Install Go
        with:
          go-version: ${{ env.GO_VER }}
      - uses: actions/checkout@v3
        name: Checkout Fabric Code
        with:
          fetch-depth: 0
      - run: make basic-checks
        name: Run Basic Checks
  unit-tests:
    name: Unit Tests
    needs: basic-checks
    runs-on: ${{ vars.RUNNER || 'ubuntu-20.04' }}
    steps:
      - uses: actions/setup-go@v3
        name: Install Go
        with:
          go-version: ${{ env.GO_VER }}
      - uses: actions/checkout@v3
        name: Checkout Fabric Code
      - run: ci/scripts/setup_hsm.sh
        name: Install SoftHSM
      - run: make unit-test
        name: Run Unit Tests
  integration-tests:
    name: Integration Tests
    needs: basic-checks
    strategy:
      fail-fast: false
      matrix:
        INTEGRATION_TEST_SUITE: ["raft","pvtdata","pvtdatapurge","ledger","lifecycle","e2e smartbft","discovery gossip devmode pluggable","gateway idemix pkcs11 configtx configtxlator","sbe nwo msp"]
    runs-on: ${{ vars.RUNNER || 'ubuntu-20.04' }}
    steps:
      - uses: actions/setup-go@v3
        name: Install Go
        with:
          go-version: ${{ env.GO_VER }}
      - uses: actions/checkout@v3
        name: Checkout Fabric Code
      - run: ci/scripts/setup_hsm.sh
        name: Install SoftHSM
      - run: make integration-test INTEGRATION_TEST_SUITE="${{matrix.INTEGRATION_TEST_SUITE}}"
        name: Run Integration Tests
